<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.dong.user">

<!-- //	회원가입	user/join -->
<!-- 	public int join(UserDTO userDTO); -->
	<insert id = "join" parameterType="UserDTO">
		insert into user (userid, userpw, username, birth, email, phone, point, userdel, lvcode)
		values (#{userid}, #{userpw}, #{username}, #{birth}, #{email}, #{phone}, 0, 0, 1)
	</insert>
	
<!-- 	회원가입 - 유저아이디 중복체크 -->
	<select id="Validation" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(*)
		from user
		where userid = #{userid}
	</select>

<!-- //	로그인	user/login -->
<!-- 	public int login(UserDTO userDTO); -->
	<select id="login" parameterType="UserDTO" resultType="UserDTO">
		select userid, username, usercode
		from user
		where userid = #{userid}
		and userpw = #{userpw}
	</select>

<!-- //	아이디 찾기	user/SearchId  이름, 생년월일 , 연락처로 찾기-->
<!-- 	public String SearchId(UserDTO userDTO); -->
	<select id="SearchId" parameterType="UserDTO" resultType="java.lang.String">
		select userid
		from user
		where username = #{username}
		and birth = #{birth}
		and phone = #{phone}
	</select>

<!-- //	비밀번호 찾기	user/SerachPw 아이디, 생년월일 , 연락처로 찾기-->
<!-- 	public String SerachPw(UserDTO userDTO); -->
	<select id="SearchPw" parameterType="UserDTO" resultType="java.lang.String">
		select userpw
		from user
		where userid = #{userid}
		and birth = #{birth}
		and phone = #{phone}
	</select>
	
<!-- //	마이페이지	user/Mypage -->
<!-- 	public UserDTO Mypage(String userid); -->
	<select id = "Mypage" parameterType="java.lang.String" resultType="UserDTO">
		select *
		from user a, userlv b
		where a.lvcode = b.lvcode
		and a.userid = #{userid}
	</select>
	
	<!-- 	포인트 충전하기  -->
	<update id = "ChargePoint" parameterType="UserDTO">
		update user
		set point = point + #{point}
		where userid = #{userid}
	</update>
	
<!-- 	상품 구매 포인트 차감하기 -->
	<update id = "PayPoint" parameterType="UserDTO">
		update user
		set point = point - #{point}
		where userid = #{userid}
	</update>

<!-- //	회원 정보 수정	user/UserUpdate -->
<!-- 	public int UserUpdate(UserDTO userDTO); -->
	<update id = "UserUpdate" parameterType="UserDTO">
		update user
		set userpw = #{userpw},	 email = #{email},	  phone = #{phone}
	</update>
	
	<!-- 회원 삭제하기 -->
	<delete id="Userdelete" parameterType="UserDTO">
		delete from user
		where usercode = #{usercode}
	</delete>

	<!-- 회원 레벨 업그레이드 -->
	
	<update id="UserUpgrade">
		update user
		set lvcode = 2
		where usercode=#{usercode}
	</update>

	<!-- 검색하기 -->
	  <select id="userSearchlist" resultType="UserDTO" parameterType="String">
		  select username, userid, usercode
		  from user
		  where 
		  username = #{username}
	</select>
	
	<!-- 친구 추가하기 -->
	<insert id="insertFriend" parameterType="FriendDTO">
		
		 insert into friend (usercode, userid, friendcode, friendname, friendid)
		 values (#{usercode}, #{userid}, #{friendcode}, #{friendname}, #{friendid})
	</insert>
	
	
	<!-- 친구 목록보기 -->
	<select id="flist"  parameterType="java.lang.String" resultType="FriendDTO">
	
		select *
		from friend
		where userid = #{userid}
	
	</select>
	

	
	  <!-- 총 게시글 갯수 출력 -->
	<select id="countUser" resultType="java.lang.Integer">
	select count(*) from user
	</select>

 <!-- 페이징 처리 전체 회원 조회 -->
	<select id="userAll" resultType="UserDTO">
		select
		@rownum:=@rownum+1 as no, user.*
		from user
		where (@rownum:=0)=0
		order by usercode desc
		limit #{start}, #{cntPerPage}
		
	</select>
  
	
  <!-- 회원 목록 검색 수  -->
		<select id="countUserSearch" parameterType="PagingUVO" resultType="java.lang.Integer">
			select count(*) from user
			where 
			username like CONCAT('%',#{keyWord},'%') 
			or userid like CONCAT('%',#{keyWord},'%') 
		</select>
  
<!-- 검색하기 -->
	  <select id="usearchlist" resultType="UserDTO" parameterType="PagingUVO">
		  select usercode, username, birth, email, phone, point, lvcode, userid
		  from user
	      where 
		  username like CONCAT('%',#{keyWord},'%') 
		  or userid like CONCAT('%',#{keyWord},'%') 
		  order by usercode desc
		  limit #{start}, #{cntPerPage}
	
	  </select>	
		
	
</mapper>